import nmap
import os
import csv
import csvexport

# global firstLine
# firstLine = True
services = []
fileName = 'hound.csv'


class bcolors:
    HEADER = '\033[95m'
    OKBLUE = '\033[94m'
    OKGREEN = '\033[92m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    ENDC = '\033[0m'
    BOLD = '\033[1m'
    UNDERLINE = '\033[4m'


def set_the_hound_on_loose(subnet):
    i = 0
    nm = nmap.PortScanner()
    nm.scan(hosts=subnet, arguments='-p21,631 -A')

    '''
    bloodscent = nm.get_nmap_last_output()
    evidence_locker = open('%s.xml' % subnet, 'w')
    evidence_locker.write(bloodscent)
    evidence_locker.close()
    follow_the_bloodtrail(subnet)
    '''
    csvEvidence = open(fileName, 'w')
    csvEvidence.write(nm.csv())
    csvEvidence.close()
    csvexport.cut_the_veggies(fileName)
    follow_the_bloodtrail()


def follow_the_bloodtrail():
    firstLine = True
    q = csv.reader(open('cutveggie.csv', 'r'))
    for row in q:
        if firstLine:  # skip first line
            firstLine = False
            continue
        if row[6] == 'open' and str(row[7]) != "":
            services.append(row[7].partition(' ')[0] + " " + row[10])
    chop_off_the_meat()


def chop_off_the_meat():
    print '----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------'
    for service in services:
        print bcolors.BOLD + bcolors.OKGREEN + "Exploit For " + service + bcolors.ENDC
        print " "
        os.system("searchsploit -t %s | grep -v -- 'dos\|Exploit\|usr\|--'" % service)
        print "----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"


if __name__ == '__main__':
    set_the_hound_on_loose('10.11.1.8')

'''                   
if __name__ == '__main__':
	print bannergrabber.hombre_grab_the_banner('10.11.1.8','80')
nm = nmap.PortScanner()
nm.scan(hosts='10.255.0.0/16', arguments='-sn')


for host,state in hosts_list:
	print host + " : " + state

nmap -n -PN -sT -sU -p- host # to scan for every TCP / UDP port.
'''
